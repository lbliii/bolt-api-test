<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

class CustomFieldView implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $externalId;

    /**
     * @var string|null
     */
    private $publicId;

    /**
     * @var string|null
     */
    private $label;

    /**
     * @var string|null
     */
    private $checkoutStep;

    /**
     * @var string|null
     */
    private $fieldSetup;

    /**
     * @var int|null
     */
    private $position;

    /**
     * @var bool|null
     */
    private $required;

    /**
     * @var bool|null
     */
    private $dynamic;

    /**
     * @var bool|null
     */
    private $subscribeToNewsletter;

    /**
     * Returns External Id.
     */
    public function getExternalId(): ?string
    {
        return $this->externalId;
    }

    /**
     * Sets External Id.
     *
     * @maps external_id
     */
    public function setExternalId(?string $externalId): void
    {
        $this->externalId = $externalId;
    }

    /**
     * Returns Public Id.
     */
    public function getPublicId(): ?string
    {
        return $this->publicId;
    }

    /**
     * Sets Public Id.
     *
     * @maps public_id
     */
    public function setPublicId(?string $publicId): void
    {
        $this->publicId = $publicId;
    }

    /**
     * Returns Label.
     */
    public function getLabel(): ?string
    {
        return $this->label;
    }

    /**
     * Sets Label.
     *
     * @maps label
     */
    public function setLabel(?string $label): void
    {
        $this->label = $label;
    }

    /**
     * Returns Checkout Step.
     */
    public function getCheckoutStep(): ?string
    {
        return $this->checkoutStep;
    }

    /**
     * Sets Checkout Step.
     *
     * @maps checkout_step
     */
    public function setCheckoutStep(?string $checkoutStep): void
    {
        $this->checkoutStep = $checkoutStep;
    }

    /**
     * Returns Field Setup.
     */
    public function getFieldSetup(): ?string
    {
        return $this->fieldSetup;
    }

    /**
     * Sets Field Setup.
     *
     * @maps field_setup
     */
    public function setFieldSetup(?string $fieldSetup): void
    {
        $this->fieldSetup = $fieldSetup;
    }

    /**
     * Returns Position.
     */
    public function getPosition(): ?int
    {
        return $this->position;
    }

    /**
     * Sets Position.
     *
     * @maps position
     */
    public function setPosition(?int $position): void
    {
        $this->position = $position;
    }

    /**
     * Returns Required.
     */
    public function getRequired(): ?bool
    {
        return $this->required;
    }

    /**
     * Sets Required.
     *
     * @maps required
     */
    public function setRequired(?bool $required): void
    {
        $this->required = $required;
    }

    /**
     * Returns Dynamic.
     */
    public function getDynamic(): ?bool
    {
        return $this->dynamic;
    }

    /**
     * Sets Dynamic.
     *
     * @maps dynamic
     */
    public function setDynamic(?bool $dynamic): void
    {
        $this->dynamic = $dynamic;
    }

    /**
     * Returns Subscribe to Newsletter.
     */
    public function getSubscribeToNewsletter(): ?bool
    {
        return $this->subscribeToNewsletter;
    }

    /**
     * Sets Subscribe to Newsletter.
     *
     * @maps subscribeToNewsletter
     */
    public function setSubscribeToNewsletter(?bool $subscribeToNewsletter): void
    {
        $this->subscribeToNewsletter = $subscribeToNewsletter;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->externalId)) {
            $json['external_id']           = $this->externalId;
        }
        if (isset($this->publicId)) {
            $json['public_id']             = $this->publicId;
        }
        if (isset($this->label)) {
            $json['label']                 = $this->label;
        }
        if (isset($this->checkoutStep)) {
            $json['checkout_step']         = $this->checkoutStep;
        }
        if (isset($this->fieldSetup)) {
            $json['field_setup']           = $this->fieldSetup;
        }
        if (isset($this->position)) {
            $json['position']              = $this->position;
        }
        if (isset($this->required)) {
            $json['required']              = $this->required;
        }
        if (isset($this->dynamic)) {
            $json['dynamic']               = $this->dynamic;
        }
        if (isset($this->subscribeToNewsletter)) {
            $json['subscribeToNewsletter'] = $this->subscribeToNewsletter;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
