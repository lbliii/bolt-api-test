<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use BoltAPILib\Utils\DateTimeHelper;
use stdClass;

class IStoreShipmentView implements \JsonSerializable
{
    /**
     * @var \DateTime|null
     */
    private $estimatedDeliveryDate;

    /**
     * @var string|null
     */
    private $carrier;

    /**
     * @var AmountView|null
     */
    private $cost;

    /**
     * @var bool|null
     */
    private $mDefault;

    /**
     * @var bool|null
     */
    private $expedited;

    /**
     * @var PackageDimension|null
     */
    private $packageDimension;

    /**
     * @var string|null
     */
    private $packageType;

    /**
     * @var IWeight|null
     */
    private $packageWeight;

    /**
     * @var string|null
     */
    private $reference;

    /**
     * @var AddressView|null
     */
    private $shippingAddress;

    /**
     * @var string|null
     */
    private $shippingMethod;

    /**
     * @var string|null
     */
    private $signature;

    /**
     * @var AmountView|null
     */
    private $taxAmount;

    /**
     * @var IWeight|null
     */
    private $totalWeight;

    /**
     * @var int|null
     */
    private $index;

    /**
     * @var bool|null
     */
    private $isStaticShippingOption;

    /**
     * @var bool|null
     */
    private $discountedByMembership;

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var IDescriptionPart[]|null
     */
    private $description;

    /**
     * @var IDescriptionTooltip[]|null
     */
    private $descriptionTooltips;

    /**
     * @var int|null
     */
    private $distance;

    /**
     * @var int|null
     */
    private $pickupWindowOpen;

    /**
     * @var int|null
     */
    private $pickupWindowClose;

    /**
     * @var string|null
     */
    private $storeName;

    /**
     * @var AddressView|null
     */
    private $address;

    /**
     * Returns Estimated Delivery Date.
     */
    public function getEstimatedDeliveryDate(): ?\DateTime
    {
        return $this->estimatedDeliveryDate;
    }

    /**
     * Sets Estimated Delivery Date.
     *
     * @maps estimated_delivery_date
     * @factory \BoltAPILib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setEstimatedDeliveryDate(?\DateTime $estimatedDeliveryDate): void
    {
        $this->estimatedDeliveryDate = $estimatedDeliveryDate;
    }

    /**
     * Returns Carrier.
     *
     * The carrier used to deliver the shipment.
     */
    public function getCarrier(): ?string
    {
        return $this->carrier;
    }

    /**
     * Sets Carrier.
     *
     * The carrier used to deliver the shipment.
     *
     * @maps carrier
     */
    public function setCarrier(?string $carrier): void
    {
        $this->carrier = $carrier;
    }

    /**
     * Returns Cost.
     */
    public function getCost(): ?AmountView
    {
        return $this->cost;
    }

    /**
     * Sets Cost.
     *
     * @maps cost
     */
    public function setCost(?AmountView $cost): void
    {
        $this->cost = $cost;
    }

    /**
     * Returns M Default.
     */
    public function getMDefault(): ?bool
    {
        return $this->mDefault;
    }

    /**
     * Sets M Default.
     *
     * @maps default
     */
    public function setMDefault(?bool $mDefault): void
    {
        $this->mDefault = $mDefault;
    }

    /**
     * Returns Expedited.
     *
     * Used to determine whether a shipment has been expedited or not.
     */
    public function getExpedited(): ?bool
    {
        return $this->expedited;
    }

    /**
     * Sets Expedited.
     *
     * Used to determine whether a shipment has been expedited or not.
     *
     * @maps expedited
     */
    public function setExpedited(?bool $expedited): void
    {
        $this->expedited = $expedited;
    }

    /**
     * Returns Package Dimension.
     */
    public function getPackageDimension(): ?PackageDimension
    {
        return $this->packageDimension;
    }

    /**
     * Sets Package Dimension.
     *
     * @maps package_dimension
     */
    public function setPackageDimension(?PackageDimension $packageDimension): void
    {
        $this->packageDimension = $packageDimension;
    }

    /**
     * Returns Package Type.
     */
    public function getPackageType(): ?string
    {
        return $this->packageType;
    }

    /**
     * Sets Package Type.
     *
     * @maps package_type
     */
    public function setPackageType(?string $packageType): void
    {
        $this->packageType = $packageType;
    }

    /**
     * Returns Package Weight.
     */
    public function getPackageWeight(): ?IWeight
    {
        return $this->packageWeight;
    }

    /**
     * Sets Package Weight.
     *
     * @maps package_weight
     */
    public function setPackageWeight(?IWeight $packageWeight): void
    {
        $this->packageWeight = $packageWeight;
    }

    /**
     * Returns Reference.
     */
    public function getReference(): ?string
    {
        return $this->reference;
    }

    /**
     * Sets Reference.
     *
     * @maps reference
     */
    public function setReference(?string $reference): void
    {
        $this->reference = $reference;
    }

    /**
     * Returns Shipping Address.
     *
     * The address object returned in the response.
     */
    public function getShippingAddress(): ?AddressView
    {
        return $this->shippingAddress;
    }

    /**
     * Sets Shipping Address.
     *
     * The address object returned in the response.
     *
     * @maps shipping_address
     */
    public function setShippingAddress(?AddressView $shippingAddress): void
    {
        $this->shippingAddress = $shippingAddress;
    }

    /**
     * Returns Shipping Method.
     */
    public function getShippingMethod(): ?string
    {
        return $this->shippingMethod;
    }

    /**
     * Sets Shipping Method.
     *
     * @maps shipping_method
     */
    public function setShippingMethod(?string $shippingMethod): void
    {
        $this->shippingMethod = $shippingMethod;
    }

    /**
     * Returns Signature.
     */
    public function getSignature(): ?string
    {
        return $this->signature;
    }

    /**
     * Sets Signature.
     *
     * @maps signature
     */
    public function setSignature(?string $signature): void
    {
        $this->signature = $signature;
    }

    /**
     * Returns Tax Amount.
     */
    public function getTaxAmount(): ?AmountView
    {
        return $this->taxAmount;
    }

    /**
     * Sets Tax Amount.
     *
     * @maps tax_amount
     */
    public function setTaxAmount(?AmountView $taxAmount): void
    {
        $this->taxAmount = $taxAmount;
    }

    /**
     * Returns Total Weight.
     */
    public function getTotalWeight(): ?IWeight
    {
        return $this->totalWeight;
    }

    /**
     * Sets Total Weight.
     *
     * @maps total_weight
     */
    public function setTotalWeight(?IWeight $totalWeight): void
    {
        $this->totalWeight = $totalWeight;
    }

    /**
     * Returns Index.
     */
    public function getIndex(): ?int
    {
        return $this->index;
    }

    /**
     * Sets Index.
     *
     * @maps index
     */
    public function setIndex(?int $index): void
    {
        $this->index = $index;
    }

    /**
     * Returns Is Static Shipping Option.
     */
    public function getIsStaticShippingOption(): ?bool
    {
        return $this->isStaticShippingOption;
    }

    /**
     * Sets Is Static Shipping Option.
     *
     * @maps is_static_shipping_option
     */
    public function setIsStaticShippingOption(?bool $isStaticShippingOption): void
    {
        $this->isStaticShippingOption = $isStaticShippingOption;
    }

    /**
     * Returns Discounted by Membership.
     */
    public function getDiscountedByMembership(): ?bool
    {
        return $this->discountedByMembership;
    }

    /**
     * Sets Discounted by Membership.
     *
     * @maps discounted_by_membership
     */
    public function setDiscountedByMembership(?bool $discountedByMembership): void
    {
        $this->discountedByMembership = $discountedByMembership;
    }

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Description.
     *
     * @return IDescriptionPart[]|null
     */
    public function getDescription(): ?array
    {
        return $this->description;
    }

    /**
     * Sets Description.
     *
     * @maps description
     *
     * @param IDescriptionPart[]|null $description
     */
    public function setDescription(?array $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Description Tooltips.
     *
     * @return IDescriptionTooltip[]|null
     */
    public function getDescriptionTooltips(): ?array
    {
        return $this->descriptionTooltips;
    }

    /**
     * Sets Description Tooltips.
     *
     * @maps description_tooltips
     *
     * @param IDescriptionTooltip[]|null $descriptionTooltips
     */
    public function setDescriptionTooltips(?array $descriptionTooltips): void
    {
        $this->descriptionTooltips = $descriptionTooltips;
    }

    /**
     * Returns Distance.
     */
    public function getDistance(): ?int
    {
        return $this->distance;
    }

    /**
     * Sets Distance.
     *
     * @maps distance
     */
    public function setDistance(?int $distance): void
    {
        $this->distance = $distance;
    }

    /**
     * Returns Pickup Window Open.
     */
    public function getPickupWindowOpen(): ?int
    {
        return $this->pickupWindowOpen;
    }

    /**
     * Sets Pickup Window Open.
     *
     * @maps pickup_window_open
     */
    public function setPickupWindowOpen(?int $pickupWindowOpen): void
    {
        $this->pickupWindowOpen = $pickupWindowOpen;
    }

    /**
     * Returns Pickup Window Close.
     */
    public function getPickupWindowClose(): ?int
    {
        return $this->pickupWindowClose;
    }

    /**
     * Sets Pickup Window Close.
     *
     * @maps pickup_window_close
     */
    public function setPickupWindowClose(?int $pickupWindowClose): void
    {
        $this->pickupWindowClose = $pickupWindowClose;
    }

    /**
     * Returns Store Name.
     */
    public function getStoreName(): ?string
    {
        return $this->storeName;
    }

    /**
     * Sets Store Name.
     *
     * @maps store_name
     */
    public function setStoreName(?string $storeName): void
    {
        $this->storeName = $storeName;
    }

    /**
     * Returns Address.
     *
     * The address object returned in the response.
     */
    public function getAddress(): ?AddressView
    {
        return $this->address;
    }

    /**
     * Sets Address.
     *
     * The address object returned in the response.
     *
     * @maps address
     */
    public function setAddress(?AddressView $address): void
    {
        $this->address = $address;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->estimatedDeliveryDate)) {
            $json['estimated_delivery_date']   = DateTimeHelper::toRfc3339DateTime($this->estimatedDeliveryDate);
        }
        if (isset($this->carrier)) {
            $json['carrier']                   = $this->carrier;
        }
        if (isset($this->cost)) {
            $json['cost']                      = $this->cost;
        }
        if (isset($this->mDefault)) {
            $json['default']                   = $this->mDefault;
        }
        if (isset($this->expedited)) {
            $json['expedited']                 = $this->expedited;
        }
        if (isset($this->packageDimension)) {
            $json['package_dimension']         = $this->packageDimension;
        }
        if (isset($this->packageType)) {
            $json['package_type']              = $this->packageType;
        }
        if (isset($this->packageWeight)) {
            $json['package_weight']            = $this->packageWeight;
        }
        if (isset($this->reference)) {
            $json['reference']                 = $this->reference;
        }
        if (isset($this->shippingAddress)) {
            $json['shipping_address']          = $this->shippingAddress;
        }
        if (isset($this->shippingMethod)) {
            $json['shipping_method']           = $this->shippingMethod;
        }
        if (isset($this->signature)) {
            $json['signature']                 = $this->signature;
        }
        if (isset($this->taxAmount)) {
            $json['tax_amount']                = $this->taxAmount;
        }
        if (isset($this->totalWeight)) {
            $json['total_weight']              = $this->totalWeight;
        }
        if (isset($this->index)) {
            $json['index']                     = $this->index;
        }
        if (isset($this->isStaticShippingOption)) {
            $json['is_static_shipping_option'] = $this->isStaticShippingOption;
        }
        if (isset($this->discountedByMembership)) {
            $json['discounted_by_membership']  = $this->discountedByMembership;
        }
        if (isset($this->type)) {
            $json['type']                      = $this->type;
        }
        if (isset($this->description)) {
            $json['description']               = $this->description;
        }
        if (isset($this->descriptionTooltips)) {
            $json['description_tooltips']      = $this->descriptionTooltips;
        }
        if (isset($this->distance)) {
            $json['distance']                  = $this->distance;
        }
        if (isset($this->pickupWindowOpen)) {
            $json['pickup_window_open']        = $this->pickupWindowOpen;
        }
        if (isset($this->pickupWindowClose)) {
            $json['pickup_window_close']       = $this->pickupWindowClose;
        }
        if (isset($this->storeName)) {
            $json['store_name']                = $this->storeName;
        }
        if (isset($this->address)) {
            $json['address']                   = $this->address;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
