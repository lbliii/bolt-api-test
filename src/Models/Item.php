<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

class Item implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $boltProductId;

    /**
     * @var int|null
     */
    private $quantity;

    /**
     * @var Property1[]|null
     */
    private $properties;

    /**
     * Returns Bolt Product Id.
     */
    public function getBoltProductId(): ?string
    {
        return $this->boltProductId;
    }

    /**
     * Sets Bolt Product Id.
     *
     * @maps bolt_product_id
     */
    public function setBoltProductId(?string $boltProductId): void
    {
        $this->boltProductId = $boltProductId;
    }

    /**
     * Returns Quantity.
     */
    public function getQuantity(): ?int
    {
        return $this->quantity;
    }

    /**
     * Sets Quantity.
     *
     * @maps quantity
     */
    public function setQuantity(?int $quantity): void
    {
        $this->quantity = $quantity;
    }

    /**
     * Returns Properties.
     *
     * @return Property1[]|null
     */
    public function getProperties(): ?array
    {
        return $this->properties;
    }

    /**
     * Sets Properties.
     *
     * @maps properties
     *
     * @param Property1[]|null $properties
     */
    public function setProperties(?array $properties): void
    {
        $this->properties = $properties;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->boltProductId)) {
            $json['bolt_product_id'] = $this->boltProductId;
        }
        if (isset($this->quantity)) {
            $json['quantity']        = $this->quantity;
        }
        if (isset($this->properties)) {
            $json['properties']      = $this->properties;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
