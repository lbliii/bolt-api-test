<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

/**
 * The Address object is used for billing, shipping, and physical store address use cases.
 */
class Address implements \JsonSerializable
{
    /**
     * @var string
     */
    private $streetAddress1;

    /**
     * @var string|null
     */
    private $streetAddress2;

    /**
     * @var array
     */
    private $streetAddress3 = [];

    /**
     * @var array
     */
    private $streetAddress4 = [];

    /**
     * @var string
     */
    private $locality;

    /**
     * @var string
     */
    private $region;

    /**
     * @var string
     */
    private $postalCode;

    /**
     * @var string|null
     */
    private $countryCode;

    /**
     * @var string|null
     */
    private $country;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string|null
     */
    private $firstName;

    /**
     * @var string|null
     */
    private $lastName;

    /**
     * @var string|null
     */
    private $company;

    /**
     * @var string|null
     */
    private $phone;

    /**
     * @var string|null
     */
    private $email;

    /**
     * @param string $streetAddress1
     * @param string $locality
     * @param string $region
     * @param string $postalCode
     */
    public function __construct(string $streetAddress1, string $locality, string $region, string $postalCode)
    {
        $this->streetAddress1 = $streetAddress1;
        $this->locality = $locality;
        $this->region = $region;
        $this->postalCode = $postalCode;
    }

    /**
     * Returns Street Address 1.
     *
     * Used for the street number and street name of the address.
     */
    public function getStreetAddress1(): string
    {
        return $this->streetAddress1;
    }

    /**
     * Sets Street Address 1.
     *
     * Used for the street number and street name of the address.
     *
     * @required
     * @maps street_address1
     */
    public function setStreetAddress1(string $streetAddress1): void
    {
        $this->streetAddress1 = $streetAddress1;
    }

    /**
     * Returns Street Address 2.
     *
     * Used for any apartment, floor, or unit details.
     */
    public function getStreetAddress2(): ?string
    {
        return $this->streetAddress2;
    }

    /**
     * Sets Street Address 2.
     *
     * Used for any apartment, floor, or unit details.
     *
     * @maps street_address2
     */
    public function setStreetAddress2(?string $streetAddress2): void
    {
        $this->streetAddress2 = $streetAddress2;
    }

    /**
     * Returns Street Address 3.
     *
     * Used for region details such as state or province.
     */
    public function getStreetAddress3(): ?string
    {
        if (count($this->streetAddress3) == 0) {
            return null;
        }
        return $this->streetAddress3['value'];
    }

    /**
     * Sets Street Address 3.
     *
     * Used for region details such as state or province.
     *
     * @maps street_address3
     */
    public function setStreetAddress3(?string $streetAddress3): void
    {
        $this->streetAddress3['value'] = $streetAddress3;
    }

    /**
     * Unsets Street Address 3.
     *
     * Used for region details such as state or province.
     */
    public function unsetStreetAddress3(): void
    {
        $this->streetAddress3 = [];
    }

    /**
     * Returns Street Address 4.
     *
     * Used for city name details.
     */
    public function getStreetAddress4(): ?string
    {
        if (count($this->streetAddress4) == 0) {
            return null;
        }
        return $this->streetAddress4['value'];
    }

    /**
     * Sets Street Address 4.
     *
     * Used for city name details.
     *
     * @maps street_address4
     */
    public function setStreetAddress4(?string $streetAddress4): void
    {
        $this->streetAddress4['value'] = $streetAddress4;
    }

    /**
     * Unsets Street Address 4.
     *
     * Used for city name details.
     */
    public function unsetStreetAddress4(): void
    {
        $this->streetAddress4 = [];
    }

    /**
     * Returns Locality.
     *
     * Used for city name details associated with this address.
     */
    public function getLocality(): string
    {
        return $this->locality;
    }

    /**
     * Sets Locality.
     *
     * Used for city name details associated with this address.
     *
     * @required
     * @maps locality
     */
    public function setLocality(string $locality): void
    {
        $this->locality = $locality;
    }

    /**
     * Returns Region.
     *
     * Used for region details such as state or province associated with this address.
     */
    public function getRegion(): string
    {
        return $this->region;
    }

    /**
     * Sets Region.
     *
     * Used for region details such as state or province associated with this address.
     *
     * @required
     * @maps region
     */
    public function setRegion(string $region): void
    {
        $this->region = $region;
    }

    /**
     * Returns Postal Code.
     *
     * Used for the postal or zip code associated with this address.
     */
    public function getPostalCode(): string
    {
        return $this->postalCode;
    }

    /**
     * Sets Postal Code.
     *
     * Used for the postal or zip code associated with this address.
     *
     * @required
     * @maps postal_code
     */
    public function setPostalCode(string $postalCode): void
    {
        $this->postalCode = $postalCode;
    }

    /**
     * Returns Country Code.
     *
     * Used for the 2-digit ISO 3166-1 alpha 2 country code associated with this address.
     */
    public function getCountryCode(): ?string
    {
        return $this->countryCode;
    }

    /**
     * Sets Country Code.
     *
     * Used for the 2-digit ISO 3166-1 alpha 2 country code associated with this address.
     *
     * @maps country_code
     */
    public function setCountryCode(?string $countryCode): void
    {
        $this->countryCode = $countryCode;
    }

    /**
     * Returns Country.
     *
     * Used for the name of the country associated with this address.
     */
    public function getCountry(): ?string
    {
        return $this->country;
    }

    /**
     * Sets Country.
     *
     * Used for the name of the country associated with this address.
     *
     * @maps country
     */
    public function setCountry(?string $country): void
    {
        $this->country = $country;
    }

    /**
     * Returns Name.
     *
     * The given and surname of the person associated with this address.
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     *
     * The given and surname of the person associated with this address.
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns First Name.
     *
     * The given name of the person associated with this address.
     */
    public function getFirstName(): ?string
    {
        return $this->firstName;
    }

    /**
     * Sets First Name.
     *
     * The given name of the person associated with this address.
     *
     * @maps first_name
     */
    public function setFirstName(?string $firstName): void
    {
        $this->firstName = $firstName;
    }

    /**
     * Returns Last Name.
     *
     * The surname of the person associated with this address.
     */
    public function getLastName(): ?string
    {
        return $this->lastName;
    }

    /**
     * Sets Last Name.
     *
     * The surname of the person associated with this address.
     *
     * @maps last_name
     */
    public function setLastName(?string $lastName): void
    {
        $this->lastName = $lastName;
    }

    /**
     * Returns Company.
     *
     * The company name associated with this address.
     */
    public function getCompany(): ?string
    {
        return $this->company;
    }

    /**
     * Sets Company.
     *
     * The company name associated with this address.
     *
     * @maps company
     */
    public function setCompany(?string $company): void
    {
        $this->company = $company;
    }

    /**
     * Returns Phone.
     *
     * The phone number of the person associated with this address.
     */
    public function getPhone(): ?string
    {
        return $this->phone;
    }

    /**
     * Sets Phone.
     *
     * The phone number of the person associated with this address.
     *
     * @maps phone
     */
    public function setPhone(?string $phone): void
    {
        $this->phone = $phone;
    }

    /**
     * Returns Email.
     *
     * The email of the person associated with this address.
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * Sets Email.
     *
     * The email of the person associated with this address.
     *
     * @maps email
     */
    public function setEmail(?string $email): void
    {
        $this->email = $email;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['street_address1']     = $this->streetAddress1;
        if (isset($this->streetAddress2)) {
            $json['street_address2'] = $this->streetAddress2;
        }
        if (!empty($this->streetAddress3)) {
            $json['street_address3'] = $this->streetAddress3['value'];
        }
        if (!empty($this->streetAddress4)) {
            $json['street_address4'] = $this->streetAddress4['value'];
        }
        $json['locality']            = $this->locality;
        $json['region']              = $this->region;
        $json['postal_code']         = $this->postalCode;
        if (isset($this->countryCode)) {
            $json['country_code']    = $this->countryCode;
        }
        if (isset($this->country)) {
            $json['country']         = $this->country;
        }
        if (isset($this->name)) {
            $json['name']            = $this->name;
        }
        if (isset($this->firstName)) {
            $json['first_name']      = $this->firstName;
        }
        if (isset($this->lastName)) {
            $json['last_name']       = $this->lastName;
        }
        if (isset($this->company)) {
            $json['company']         = $this->company;
        }
        if (isset($this->phone)) {
            $json['phone']           = $this->phone;
        }
        if (isset($this->email)) {
            $json['email']           = $this->email;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
