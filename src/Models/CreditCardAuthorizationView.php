<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

class CreditCardAuthorizationView implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $auth;

    /**
     * @var string|null
     */
    private $avsResponse;

    /**
     * @var string|null
     */
    private $cvvResponse;

    /**
     * @var array<string,string>|null
     */
    private $metadata;

    /**
     * @var string|null
     */
    private $processor;

    /**
     * @var string|null
     */
    private $reason;

    /**
     * @var string|null
     */
    private $status;

    /**
     * Returns Auth.
     */
    public function getAuth(): ?string
    {
        return $this->auth;
    }

    /**
     * Sets Auth.
     *
     * @maps auth
     */
    public function setAuth(?string $auth): void
    {
        $this->auth = $auth;
    }

    /**
     * Returns Avs Response.
     */
    public function getAvsResponse(): ?string
    {
        return $this->avsResponse;
    }

    /**
     * Sets Avs Response.
     *
     * @maps avs_response
     */
    public function setAvsResponse(?string $avsResponse): void
    {
        $this->avsResponse = $avsResponse;
    }

    /**
     * Returns Cvv Response.
     */
    public function getCvvResponse(): ?string
    {
        return $this->cvvResponse;
    }

    /**
     * Sets Cvv Response.
     *
     * @maps cvv_response
     */
    public function setCvvResponse(?string $cvvResponse): void
    {
        $this->cvvResponse = $cvvResponse;
    }

    /**
     * Returns Metadata.
     *
     * @return array<string,string>|null
     */
    public function getMetadata(): ?array
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     *
     * @maps metadata
     *
     * @param array<string,string>|null $metadata
     */
    public function setMetadata(?array $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Returns Processor.
     */
    public function getProcessor(): ?string
    {
        return $this->processor;
    }

    /**
     * Sets Processor.
     *
     * @maps processor
     */
    public function setProcessor(?string $processor): void
    {
        $this->processor = $processor;
    }

    /**
     * Returns Reason.
     */
    public function getReason(): ?string
    {
        return $this->reason;
    }

    /**
     * Sets Reason.
     *
     * @maps reason
     */
    public function setReason(?string $reason): void
    {
        $this->reason = $reason;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->auth)) {
            $json['auth']         = $this->auth;
        }
        if (isset($this->avsResponse)) {
            $json['avs_response'] = $this->avsResponse;
        }
        if (isset($this->cvvResponse)) {
            $json['cvv_response'] = $this->cvvResponse;
        }
        if (isset($this->metadata)) {
            $json['metadata']     = $this->metadata;
        }
        if (isset($this->processor)) {
            $json['processor']    = $this->processor;
        }
        if (isset($this->reason)) {
            $json['reason']       = $this->reason;
        }
        if (isset($this->status)) {
            $json['status']       = $this->status;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
