<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

class InStoreCartShipment implements \JsonSerializable
{
    /**
     * @var CartShipment|null
     */
    private $cartShipment;

    /**
     * @var Address|null
     */
    private $inStorePickupAddress;

    /**
     * @var float|null
     */
    private $distance;

    /**
     * @var string|null
     */
    private $distanceUnit;

    /**
     * @var string|null
     */
    private $storeName;

    /**
     * @var int|null
     */
    private $pickupWindowOpen;

    /**
     * @var int|null
     */
    private $pickupWindowClose;

    /**
     * Returns Cart Shipment.
     */
    public function getCartShipment(): ?CartShipment
    {
        return $this->cartShipment;
    }

    /**
     * Sets Cart Shipment.
     *
     * @maps cart_shipment
     */
    public function setCartShipment(?CartShipment $cartShipment): void
    {
        $this->cartShipment = $cartShipment;
    }

    /**
     * Returns In Store Pickup Address.
     *
     * The Address object is used for billing, shipping, and physical store address use cases.
     */
    public function getInStorePickupAddress(): ?Address
    {
        return $this->inStorePickupAddress;
    }

    /**
     * Sets In Store Pickup Address.
     *
     * The Address object is used for billing, shipping, and physical store address use cases.
     *
     * @maps in_store_pickup_address
     */
    public function setInStorePickupAddress(?Address $inStorePickupAddress): void
    {
        $this->inStorePickupAddress = $inStorePickupAddress;
    }

    /**
     * Returns Distance.
     */
    public function getDistance(): ?float
    {
        return $this->distance;
    }

    /**
     * Sets Distance.
     *
     * @maps distance
     */
    public function setDistance(?float $distance): void
    {
        $this->distance = $distance;
    }

    /**
     * Returns Distance Unit.
     */
    public function getDistanceUnit(): ?string
    {
        return $this->distanceUnit;
    }

    /**
     * Sets Distance Unit.
     *
     * @maps distance_unit
     */
    public function setDistanceUnit(?string $distanceUnit): void
    {
        $this->distanceUnit = $distanceUnit;
    }

    /**
     * Returns Store Name.
     *
     * The local store's name where the item can be picked up.
     */
    public function getStoreName(): ?string
    {
        return $this->storeName;
    }

    /**
     * Sets Store Name.
     *
     * The local store's name where the item can be picked up.
     *
     * @maps store_name
     */
    public function setStoreName(?string $storeName): void
    {
        $this->storeName = $storeName;
    }

    /**
     * Returns Pickup Window Open.
     */
    public function getPickupWindowOpen(): ?int
    {
        return $this->pickupWindowOpen;
    }

    /**
     * Sets Pickup Window Open.
     *
     * @maps pickup_window_open
     */
    public function setPickupWindowOpen(?int $pickupWindowOpen): void
    {
        $this->pickupWindowOpen = $pickupWindowOpen;
    }

    /**
     * Returns Pickup Window Close.
     */
    public function getPickupWindowClose(): ?int
    {
        return $this->pickupWindowClose;
    }

    /**
     * Sets Pickup Window Close.
     *
     * @maps pickup_window_close
     */
    public function setPickupWindowClose(?int $pickupWindowClose): void
    {
        $this->pickupWindowClose = $pickupWindowClose;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->cartShipment)) {
            $json['cart_shipment']           = $this->cartShipment;
        }
        if (isset($this->inStorePickupAddress)) {
            $json['in_store_pickup_address'] = $this->inStorePickupAddress;
        }
        if (isset($this->distance)) {
            $json['distance']                = $this->distance;
        }
        if (isset($this->distanceUnit)) {
            $json['distance_unit']           = $this->distanceUnit;
        }
        if (isset($this->storeName)) {
            $json['store_name']              = $this->storeName;
        }
        if (isset($this->pickupWindowOpen)) {
            $json['pickup_window_open']      = $this->pickupWindowOpen;
        }
        if (isset($this->pickupWindowClose)) {
            $json['pickup_window_close']     = $this->pickupWindowClose;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
