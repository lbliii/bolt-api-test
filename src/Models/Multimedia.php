<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

class Multimedia implements \JsonSerializable
{
    /**
     * @var string[]|null
     */
    private $imageURLs;

    /**
     * @var Identifiers|null
     */
    private $identifiers;

    /**
     * @var Property[]|null
     */
    private $properties;

    /**
     * Returns Image UR Ls.
     *
     * @return string[]|null
     */
    public function getImageURLs(): ?array
    {
        return $this->imageURLs;
    }

    /**
     * Sets Image UR Ls.
     *
     * @maps ImageURLs
     *
     * @param string[]|null $imageURLs
     */
    public function setImageURLs(?array $imageURLs): void
    {
        $this->imageURLs = $imageURLs;
    }

    /**
     * Returns Identifiers.
     */
    public function getIdentifiers(): ?Identifiers
    {
        return $this->identifiers;
    }

    /**
     * Sets Identifiers.
     *
     * @maps Identifiers
     */
    public function setIdentifiers(?Identifiers $identifiers): void
    {
        $this->identifiers = $identifiers;
    }

    /**
     * Returns Properties.
     *
     * @return Property[]|null
     */
    public function getProperties(): ?array
    {
        return $this->properties;
    }

    /**
     * Sets Properties.
     *
     * @maps Properties
     *
     * @param Property[]|null $properties
     */
    public function setProperties(?array $properties): void
    {
        $this->properties = $properties;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->imageURLs)) {
            $json['ImageURLs']   = $this->imageURLs;
        }
        if (isset($this->identifiers)) {
            $json['Identifiers'] = $this->identifiers;
        }
        if (isset($this->properties)) {
            $json['Properties']  = $this->properties;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
