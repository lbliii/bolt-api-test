<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

/**
 * The CreditCard object is used to to pay for guest-checkout transactions and save payment method
 * details to an account. Once saved, you can reference the associated `credit_card_id` for future
 * transactions.
 */
class CreditCardView implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $last4;

    /**
     * @var string|null
     */
    private $bin;

    /**
     * @var int|null
     */
    private $expiration;

    /**
     * @var string|null
     */
    private $network;

    /**
     * @var string|null
     */
    private $tokenType;

    /**
     * @var string|null
     */
    private $priority;

    /**
     * @var string|null
     */
    private $displayNetwork;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var AddressView|null
     */
    private $billingAddress;

    /**
     * Returns Id.
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Last 4.
     *
     * The last 4 digits of the credit card number.
     */
    public function getLast4(): ?string
    {
        return $this->last4;
    }

    /**
     * Sets Last 4.
     *
     * The last 4 digits of the credit card number.
     *
     * @maps last4
     */
    public function setLast4(?string $last4): void
    {
        $this->last4 = $last4;
    }

    /**
     * Returns Bin.
     *
     * The Bank Identification Number for the credit card; this is typically the first 4-6 digits of the
     * credit card number.
     */
    public function getBin(): ?string
    {
        return $this->bin;
    }

    /**
     * Sets Bin.
     *
     * The Bank Identification Number for the credit card; this is typically the first 4-6 digits of the
     * credit card number.
     *
     * @maps bin
     */
    public function setBin(?string $bin): void
    {
        $this->bin = $bin;
    }

    /**
     * Returns Expiration.
     *
     * The expiration date of the credit card.
     */
    public function getExpiration(): ?int
    {
        return $this->expiration;
    }

    /**
     * Sets Expiration.
     *
     * The expiration date of the credit card.
     *
     * @maps expiration
     */
    public function setExpiration(?int $expiration): void
    {
        $this->expiration = $expiration;
    }

    /**
     * Returns Network.
     */
    public function getNetwork(): ?string
    {
        return $this->network;
    }

    /**
     * Sets Network.
     *
     * @maps network
     */
    public function setNetwork(?string $network): void
    {
        $this->network = $network;
    }

    /**
     * Returns Token Type.
     *
     * Used to define which payment processor generated the token for this credit card.
     */
    public function getTokenType(): ?string
    {
        return $this->tokenType;
    }

    /**
     * Sets Token Type.
     *
     * Used to define which payment processor generated the token for this credit card.
     *
     * @maps token_type
     */
    public function setTokenType(?string $tokenType): void
    {
        $this->tokenType = $tokenType;
    }

    /**
     * Returns Priority.
     */
    public function getPriority(): ?string
    {
        return $this->priority;
    }

    /**
     * Sets Priority.
     *
     * @maps priority
     */
    public function setPriority(?string $priority): void
    {
        $this->priority = $priority;
    }

    /**
     * Returns Display Network.
     */
    public function getDisplayNetwork(): ?string
    {
        return $this->displayNetwork;
    }

    /**
     * Sets Display Network.
     *
     * @maps display_network
     */
    public function setDisplayNetwork(?string $displayNetwork): void
    {
        $this->displayNetwork = $displayNetwork;
    }

    /**
     * Returns Status.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Billing Address.
     *
     * The address object returned in the response.
     */
    public function getBillingAddress(): ?AddressView
    {
        return $this->billingAddress;
    }

    /**
     * Sets Billing Address.
     *
     * The address object returned in the response.
     *
     * @maps billing_address
     */
    public function setBillingAddress(?AddressView $billingAddress): void
    {
        $this->billingAddress = $billingAddress;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->id)) {
            $json['id']              = $this->id;
        }
        if (isset($this->last4)) {
            $json['last4']           = $this->last4;
        }
        if (isset($this->bin)) {
            $json['bin']             = $this->bin;
        }
        if (isset($this->expiration)) {
            $json['expiration']      = $this->expiration;
        }
        if (isset($this->network)) {
            $json['network']         = $this->network;
        }
        if (isset($this->tokenType)) {
            $json['token_type']      = $this->tokenType;
        }
        if (isset($this->priority)) {
            $json['priority']        = $this->priority;
        }
        if (isset($this->displayNetwork)) {
            $json['display_network'] = $this->displayNetwork;
        }
        if (isset($this->status)) {
            $json['status']          = $this->status;
        }
        if (isset($this->billingAddress)) {
            $json['billing_address'] = $this->billingAddress;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
