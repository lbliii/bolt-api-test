<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

class CartItemCustomization implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $title;

    /**
     * @var int|null
     */
    private $price;

    /**
     * @var array<string,string>|null
     */
    private $attributes;

    /**
     * Returns Title.
     */
    public function getTitle(): ?string
    {
        return $this->title;
    }

    /**
     * Sets Title.
     *
     * @maps title
     */
    public function setTitle(?string $title): void
    {
        $this->title = $title;
    }

    /**
     * Returns Price.
     */
    public function getPrice(): ?int
    {
        return $this->price;
    }

    /**
     * Sets Price.
     *
     * @maps price
     */
    public function setPrice(?int $price): void
    {
        $this->price = $price;
    }

    /**
     * Returns Attributes.
     *
     * @return array<string,string>|null
     */
    public function getAttributes(): ?array
    {
        return $this->attributes;
    }

    /**
     * Sets Attributes.
     *
     * @maps attributes
     *
     * @param array<string,string>|null $attributes
     */
    public function setAttributes(?array $attributes): void
    {
        $this->attributes = $attributes;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->title)) {
            $json['title']      = $this->title;
        }
        if (isset($this->price)) {
            $json['price']      = $this->price;
        }
        if (isset($this->attributes)) {
            $json['attributes'] = $this->attributes;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
