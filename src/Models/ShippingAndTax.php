<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

class ShippingAndTax implements \JsonSerializable
{
    /**
     * @var string
     */
    private $orderToken;

    /**
     * @var Address
     */
    private $shippingAddress;

    /**
     * @var CartCreate
     */
    private $cart;

    /**
     * @var CartShipment[]|null
     */
    private $shippingOptions;

    /**
     * @var string|null
     */
    private $requestSource;

    /**
     * @var bool
     */
    private $estimatedDeliveryExperiment;

    /**
     * @param string $orderToken
     * @param Address $shippingAddress
     * @param CartCreate $cart
     * @param bool $estimatedDeliveryExperiment
     */
    public function __construct(
        string $orderToken,
        Address $shippingAddress,
        CartCreate $cart,
        bool $estimatedDeliveryExperiment
    ) {
        $this->orderToken = $orderToken;
        $this->shippingAddress = $shippingAddress;
        $this->cart = $cart;
        $this->estimatedDeliveryExperiment = $estimatedDeliveryExperiment;
    }

    /**
     * Returns Order Token.
     *
     * The Bolt token associated to the order.
     */
    public function getOrderToken(): string
    {
        return $this->orderToken;
    }

    /**
     * Sets Order Token.
     *
     * The Bolt token associated to the order.
     *
     * @required
     * @maps order_token
     */
    public function setOrderToken(string $orderToken): void
    {
        $this->orderToken = $orderToken;
    }

    /**
     * Returns Shipping Address.
     *
     * The Address object is used for billing, shipping, and physical store address use cases.
     */
    public function getShippingAddress(): Address
    {
        return $this->shippingAddress;
    }

    /**
     * Sets Shipping Address.
     *
     * The Address object is used for billing, shipping, and physical store address use cases.
     *
     * @required
     * @maps shipping_address
     */
    public function setShippingAddress(Address $shippingAddress): void
    {
        $this->shippingAddress = $shippingAddress;
    }

    /**
     * Returns Cart.
     */
    public function getCart(): CartCreate
    {
        return $this->cart;
    }

    /**
     * Sets Cart.
     *
     * @required
     * @maps cart
     */
    public function setCart(CartCreate $cart): void
    {
        $this->cart = $cart;
    }

    /**
     * Returns Shipping Options.
     *
     * @return CartShipment[]|null
     */
    public function getShippingOptions(): ?array
    {
        return $this->shippingOptions;
    }

    /**
     * Sets Shipping Options.
     *
     * @maps shipping_options
     *
     * @param CartShipment[]|null $shippingOptions
     */
    public function setShippingOptions(?array $shippingOptions): void
    {
        $this->shippingOptions = $shippingOptions;
    }

    /**
     * Returns Request Source.
     */
    public function getRequestSource(): ?string
    {
        return $this->requestSource;
    }

    /**
     * Sets Request Source.
     *
     * @maps request_source
     */
    public function setRequestSource(?string $requestSource): void
    {
        $this->requestSource = $requestSource;
    }

    /**
     * Returns Estimated Delivery Experiment.
     */
    public function getEstimatedDeliveryExperiment(): bool
    {
        return $this->estimatedDeliveryExperiment;
    }

    /**
     * Sets Estimated Delivery Experiment.
     *
     * @required
     * @maps estimated_delivery_experiment
     */
    public function setEstimatedDeliveryExperiment(bool $estimatedDeliveryExperiment): void
    {
        $this->estimatedDeliveryExperiment = $estimatedDeliveryExperiment;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['order_token']                   = $this->orderToken;
        $json['shipping_address']              = $this->shippingAddress;
        $json['cart']                          = $this->cart;
        if (isset($this->shippingOptions)) {
            $json['shipping_options']          = $this->shippingOptions;
        }
        if (isset($this->requestSource)) {
            $json['request_source']            = $this->requestSource;
        }
        $json['estimated_delivery_experiment'] = $this->estimatedDeliveryExperiment;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
