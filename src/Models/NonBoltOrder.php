<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

/**
 * An order that is not created using a Bolt token.
 */
class NonBoltOrder implements \JsonSerializable
{
    /**
     * @var NonBoltCart
     */
    private $cart;

    /**
     * @var string
     */
    private $userNote;

    /**
     * @var string|null
     */
    private $userIdentifier;

    /**
     * @var string|null
     */
    private $userIdentity;

    /**
     * @var string
     */
    private $paymentMethod;

    /**
     * @param NonBoltCart $cart
     * @param string $userNote
     * @param string $paymentMethod
     */
    public function __construct(NonBoltCart $cart, string $userNote, string $paymentMethod)
    {
        $this->cart = $cart;
        $this->userNote = $userNote;
        $this->paymentMethod = $paymentMethod;
    }

    /**
     * Returns Cart.
     */
    public function getCart(): NonBoltCart
    {
        return $this->cart;
    }

    /**
     * Sets Cart.
     *
     * @required
     * @maps cart
     */
    public function setCart(NonBoltCart $cart): void
    {
        $this->cart = $cart;
    }

    /**
     * Returns User Note.
     *
     * Used by shoppers to make extra requests or provide details for gift messages.
     */
    public function getUserNote(): string
    {
        return $this->userNote;
    }

    /**
     * Sets User Note.
     *
     * Used by shoppers to make extra requests or provide details for gift messages.
     *
     * @required
     * @maps user_note
     */
    public function setUserNote(string $userNote): void
    {
        $this->userNote = $userNote;
    }

    /**
     * Returns User Identifier.
     */
    public function getUserIdentifier(): ?string
    {
        return $this->userIdentifier;
    }

    /**
     * Sets User Identifier.
     *
     * @maps user_identifier
     */
    public function setUserIdentifier(?string $userIdentifier): void
    {
        $this->userIdentifier = $userIdentifier;
    }

    /**
     * Returns User Identity.
     */
    public function getUserIdentity(): ?string
    {
        return $this->userIdentity;
    }

    /**
     * Sets User Identity.
     *
     * @maps user_identity
     */
    public function setUserIdentity(?string $userIdentity): void
    {
        $this->userIdentity = $userIdentity;
    }

    /**
     * Returns Payment Method.
     */
    public function getPaymentMethod(): string
    {
        return $this->paymentMethod;
    }

    /**
     * Sets Payment Method.
     *
     * @required
     * @maps payment_method
     */
    public function setPaymentMethod(string $paymentMethod): void
    {
        $this->paymentMethod = $paymentMethod;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['cart']                = $this->cart;
        $json['user_note']           = $this->userNote;
        if (isset($this->userIdentifier)) {
            $json['user_identifier'] = $this->userIdentifier;
        }
        if (isset($this->userIdentity)) {
            $json['user_identity']   = $this->userIdentity;
        }
        $json['payment_method']      = $this->paymentMethod;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
