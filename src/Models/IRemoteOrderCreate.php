<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

class IRemoteOrderCreate implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $merchantDivisionId;

    /**
     * @var Cart3|null
     */
    private $cart;

    /**
     * Returns Merchant Division Id.
     *
     * The unique ID associated to the merchant's Bolt Account division; Merchants can have different
     * divisions to suit multiple use cases (storefronts, pay-by-link, phone order processing). You can
     * view and switch between these divisions from the Bolt Merchant Dashboard.
     */
    public function getMerchantDivisionId(): ?string
    {
        return $this->merchantDivisionId;
    }

    /**
     * Sets Merchant Division Id.
     *
     * The unique ID associated to the merchant's Bolt Account division; Merchants can have different
     * divisions to suit multiple use cases (storefronts, pay-by-link, phone order processing). You can
     * view and switch between these divisions from the Bolt Merchant Dashboard.
     *
     * @maps merchant_division_id
     */
    public function setMerchantDivisionId(?string $merchantDivisionId): void
    {
        $this->merchantDivisionId = $merchantDivisionId;
    }

    /**
     * Returns Cart.
     */
    public function getCart(): ?Cart3
    {
        return $this->cart;
    }

    /**
     * Sets Cart.
     *
     * @maps cart
     */
    public function setCart(?Cart3 $cart): void
    {
        $this->cart = $cart;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->merchantDivisionId)) {
            $json['merchant_division_id'] = $this->merchantDivisionId;
        }
        if (isset($this->cart)) {
            $json['cart']                 = $this->cart;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
