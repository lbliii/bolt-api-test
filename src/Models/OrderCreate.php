<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

class OrderCreate implements \JsonSerializable
{
    /**
     * @var array
     */
    private $externalInputs = [];

    /**
     * @var CartCreate
     */
    private $cart;

    /**
     * @var string
     */
    private $userNote;

    /**
     * @var bool|null
     */
    private $createCartOnMerchantBackend;

    /**
     * @var IOrderMetadata|null
     */
    private $metadata;

    /**
     * @var string
     */
    private $channel;

    /**
     * @param CartCreate $cart
     * @param string $userNote
     * @param string $channel
     */
    public function __construct(CartCreate $cart, string $userNote, string $channel)
    {
        $this->cart = $cart;
        $this->userNote = $userNote;
        $this->channel = $channel;
    }

    /**
     * Returns External Inputs.
     */
    public function getExternalInputs(): ?OrderCreateExternalInputs
    {
        if (count($this->externalInputs) == 0) {
            return null;
        }
        return $this->externalInputs['value'];
    }

    /**
     * Sets External Inputs.
     *
     * @maps external_inputs
     */
    public function setExternalInputs(?OrderCreateExternalInputs $externalInputs): void
    {
        $this->externalInputs['value'] = $externalInputs;
    }

    /**
     * Unsets External Inputs.
     */
    public function unsetExternalInputs(): void
    {
        $this->externalInputs = [];
    }

    /**
     * Returns Cart.
     */
    public function getCart(): CartCreate
    {
        return $this->cart;
    }

    /**
     * Sets Cart.
     *
     * @required
     * @maps cart
     */
    public function setCart(CartCreate $cart): void
    {
        $this->cart = $cart;
    }

    /**
     * Returns User Note.
     *
     * Used by shoppers to make extra requests or provide details for gift messages.
     */
    public function getUserNote(): string
    {
        return $this->userNote;
    }

    /**
     * Sets User Note.
     *
     * Used by shoppers to make extra requests or provide details for gift messages.
     *
     * @required
     * @maps user_note
     */
    public function setUserNote(string $userNote): void
    {
        $this->userNote = $userNote;
    }

    /**
     * Returns Create Cart on Merchant Backend.
     *
     * Used to determine whether the order is created on your backend platform. This should almost always
     * be `false`.
     */
    public function getCreateCartOnMerchantBackend(): ?bool
    {
        return $this->createCartOnMerchantBackend;
    }

    /**
     * Sets Create Cart on Merchant Backend.
     *
     * Used to determine whether the order is created on your backend platform. This should almost always
     * be `false`.
     *
     * @maps create_cart_on_merchant_backend
     */
    public function setCreateCartOnMerchantBackend(?bool $createCartOnMerchantBackend): void
    {
        $this->createCartOnMerchantBackend = $createCartOnMerchantBackend;
    }

    /**
     * Returns Metadata.
     */
    public function getMetadata(): ?IOrderMetadata
    {
        return $this->metadata;
    }

    /**
     * Sets Metadata.
     *
     * @maps metadata
     */
    public function setMetadata(?IOrderMetadata $metadata): void
    {
        $this->metadata = $metadata;
    }

    /**
     * Returns Channel.
     *
     * Used to determine the channel from which the order was created.
     */
    public function getChannel(): string
    {
        return $this->channel;
    }

    /**
     * Sets Channel.
     *
     * Used to determine the channel from which the order was created.
     *
     * @required
     * @maps channel
     */
    public function setChannel(string $channel): void
    {
        $this->channel = $channel;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (!empty($this->externalInputs)) {
            $json['external_inputs']             = $this->externalInputs['value'];
        }
        $json['cart']                            = $this->cart;
        $json['user_note']                       = $this->userNote;
        $json['create_cart_on_merchant_backend'] = $this->createCartOnMerchantBackend;
        if (isset($this->metadata)) {
            $json['metadata']                    = $this->metadata;
        }
        $json['channel']                         = $this->channel;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
