<?php

declare(strict_types=1);

/*
 * BoltAPILib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace BoltAPILib\Models;

use stdClass;

class TransactionTimelineView implements \JsonSerializable
{
    /**
     * @var float|null
     */
    private $date;

    /**
     * @var string|null
     */
    private $type;

    /**
     * @var string|null
     */
    private $note;

    /**
     * @var AmountView|null
     */
    private $amount;

    /**
     * @var TransactionView|null
     */
    private $transaction;

    /**
     * @var ConsumerSummaryView|null
     */
    private $consumer;

    /**
     * @var TransactionReviewView|null
     */
    private $review;

    /**
     * @var AddressChangeView|null
     */
    private $addressChange;

    /**
     * @var string|null
     */
    private $visibility;

    /**
     * Returns Date.
     */
    public function getDate(): ?float
    {
        return $this->date;
    }

    /**
     * Sets Date.
     *
     * @maps date
     */
    public function setDate(?float $date): void
    {
        $this->date = $date;
    }

    /**
     * Returns Type.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Note.
     */
    public function getNote(): ?string
    {
        return $this->note;
    }

    /**
     * Sets Note.
     *
     * @maps note
     */
    public function setNote(?string $note): void
    {
        $this->note = $note;
    }

    /**
     * Returns Amount.
     */
    public function getAmount(): ?AmountView
    {
        return $this->amount;
    }

    /**
     * Sets Amount.
     *
     * @maps amount
     */
    public function setAmount(?AmountView $amount): void
    {
        $this->amount = $amount;
    }

    /**
     * Returns Transaction.
     */
    public function getTransaction(): ?TransactionView
    {
        return $this->transaction;
    }

    /**
     * Sets Transaction.
     *
     * @maps transaction
     */
    public function setTransaction(?TransactionView $transaction): void
    {
        $this->transaction = $transaction;
    }

    /**
     * Returns Consumer.
     */
    public function getConsumer(): ?ConsumerSummaryView
    {
        return $this->consumer;
    }

    /**
     * Sets Consumer.
     *
     * @maps consumer
     */
    public function setConsumer(?ConsumerSummaryView $consumer): void
    {
        $this->consumer = $consumer;
    }

    /**
     * Returns Review.
     */
    public function getReview(): ?TransactionReviewView
    {
        return $this->review;
    }

    /**
     * Sets Review.
     *
     * @maps review
     */
    public function setReview(?TransactionReviewView $review): void
    {
        $this->review = $review;
    }

    /**
     * Returns Address Change.
     */
    public function getAddressChange(): ?AddressChangeView
    {
        return $this->addressChange;
    }

    /**
     * Sets Address Change.
     *
     * @maps address_change
     */
    public function setAddressChange(?AddressChangeView $addressChange): void
    {
        $this->addressChange = $addressChange;
    }

    /**
     * Returns Visibility.
     */
    public function getVisibility(): ?string
    {
        return $this->visibility;
    }

    /**
     * Sets Visibility.
     *
     * @maps visibility
     */
    public function setVisibility(?string $visibility): void
    {
        $this->visibility = $visibility;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->date)) {
            $json['date']           = $this->date;
        }
        if (isset($this->type)) {
            $json['type']           = $this->type;
        }
        if (isset($this->note)) {
            $json['note']           = $this->note;
        }
        if (isset($this->amount)) {
            $json['amount']         = $this->amount;
        }
        if (isset($this->transaction)) {
            $json['transaction']    = $this->transaction;
        }
        if (isset($this->consumer)) {
            $json['consumer']       = $this->consumer;
        }
        if (isset($this->review)) {
            $json['review']         = $this->review;
        }
        if (isset($this->addressChange)) {
            $json['address_change'] = $this->addressChange;
        }
        if (isset($this->visibility)) {
            $json['visibility']     = $this->visibility;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
